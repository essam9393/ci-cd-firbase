name: Flutter CI + CD

# This workflow is triggered on pushes to the repository.
on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ main ] # Add this trigger to run this workflow on PR's to the main branch
  workflow_dispatch: # to manually run this workflow

env:
  FLUTTER_CHANNEL: 'stable' # 'stable', 'beta', or 'master', default to: 'stable'
  FLUTTER_VERSION: '3.7.12'
  XCODE_VERSION: '14.2'
  PATH_TO_IPA: 'build/ios/ipa/deleteme.ipa'

jobs:
  ios:
    name: iOS CI/CD
    # needs: code-analysis-and-testing
    runs-on: macos-12
    timeout-minutes: 30
    steps:  
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Xcode ${{ env.XCODE_VERSION }}
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ env.XCODE_VERSION }}

    - name: Prepare code signing
      env:
        FS_KEYCHAIN_PASS: ${{ secrets.FS_KEYCHAIN_PASS }}
        FS_P12_FILE: ${{ secrets.FS_P12_FILE }}
        FS_P12_PASS: ${{ secrets.FS_P12_PASS }}
        FS_PROV_FILE: ${{ secrets.FS_PROV_FILE }}
      run: |
        echo "Convert base64 strings to files"
        echo "$FS_PROV_FILE" >> prov.temp.txt
        echo "$FS_P12_FILE ">> cert.temp.txt
        base64 --decode prov.temp.txt > prov.temp.mobileprovision
        base64 --decode cert.temp.txt > cert.temp.p12
        echo "Copy provisioning file to the correct locations"
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp prov.temp.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/prov.mobileprovision
        echo "Create a new keychain & import p12 certificate"
        security create-keychain -p "$FS_KEYCHAIN_PASS" build.keychain
        security import cert.temp.p12 -t agg -k ~/Library/Keychains/build.keychain -P "$FS_P12_PASS" -A
        echo "Set new keychain as a default"
        security list-keychains -s ~/Library/Keychains/build.keychain
        security default-keychain -s ~/Library/Keychains/build.keychain
        security unlock-keychain -p "$FS_KEYCHAIN_PASS" ~/Library/Keychains/build.keychain
        security set-key-partition-list -S apple-tool:,apple: -s -k "$FS_KEYCHAIN_PASS" ~/Library/Keychains/build.keychain
        echo "Clean up temp files"
        rm *.temp.*
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: ${{ env.FLUTTER_CHANNEL }}
        # flutter-version: ${{ env.FLUTTER_VERSION }} # you can also specify exact version of flutter
    
    - name: Flutter doctor
      run: flutter doctor # this is an optional step and can be removed

    - name: Build IPA
      env:
        FS_KEYCHAIN_PASS: ${{ secrets.FS_KEYCHAIN_PASS }}
      run: |
        echo "Unlocking keychain"
        security unlock-keychain -p "$FS_KEYCHAIN_PASS" ~/Library/Keychains/build.keychain
        # Important, just in case the build takes longer than the default 300s timeout
        # Otherwise the build will freeze at signing the frameworks if the keychain is locked
        echo "Increasing keychain auto lock timeout"
        security set-keychain-settings -lut 2680 ~/Library/Keychains/build.keychain
        flutter build ipa
        echo "Locking keychain"
        security lock-keychain ~/Library/Keychains/build.keychain
    - name: Upload IPA artifact
      uses: actions/upload-artifact@v3
      with:
        name: release-ipa
        path: ${{ env.PATH_TO_IPA }}

    - name: Publishing app to TestFlight
      env:
        IOS_API_ISSUER_ID: ${{ secrets.IOS_API_ISSUER_ID }}
        IOS_API_KEY_ID: ${{ secrets.IOS_API_KEY_ID }}
        PATH_TO_IPA: ${{ env.PATH_TO_IPA }}
      run: |
        xcrun altool --upload-app -t ios -f $PATH_TO_IPA --apiKey "$IOS_API_KEY_ID" --apiIssuer "$IOS_API_ISSUER_ID"
