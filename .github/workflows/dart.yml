name: Firebase-Distribution CI + CD

# This workflow is triggered on pushes to the repository.
on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ main ] # Add this trigger to run this workflow on PR's to the main branch
  workflow_dispatch: # to manually run this workflow

env:
  FLUTTER_CHANNEL: 'stable' # 'stable', 'beta', or 'master', default to: 'stable'
  FLUTTER_VERSION: '3.7.12'
  XCODE_VERSION: '14.2'
  PATH_TO_IPA: 'build/ios/ipa/deleteme.ipa'

jobs:
  build-ios:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: app

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v2

      - name: Install Dependencies
        run: flutter packages get

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.FS_P12_FILE }}
          P12_PASSWORD: ${{ secrets.FS_P12_PASS }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.FS_PROV_FILE }}
          KEYCHAIN_PASSWORD: ${{ secrets.FS_KEYCHAIN_PASS }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build
        run: flutter build ios --release --no-codesign

      - name: Build resolve Swift dependencies
        run: xcodebuild -resolvePackageDependencies -workspace ios/Runner.xcworkspace -scheme Runner -configuration "Release"

      - name: Build xArchive
        run: |
          xcodebuild -workspace ios/Runner.xcworkspace -scheme Runner -configuration "Release-staging" DEVELOPMENT_TEAM=**DEV_TEAM** -sdk 'iphoneos' -destination 'generic/platform=iOS' -archivePath build-output/app.xcarchive PROVISIONING_PROFILE=**PROVISIONING_PROFILE_ID** clean archive CODE_SIGN_IDENTITY="**CODE_SIGNING_IDENTITY**"

      - name: Export ipa
        run: |
          xcodebuild -exportArchive -archivePath build-output/app.xcarchive -exportPath build-output/ios -exportOptionsPlist ios/ExportOptions.plist

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: App.ipa
          path: /Users/runner/work/YOUR_APP/YOUR_APP/app/build-output/ios/YOUR_APP_NAME.ipa
          retention-days: 1
          if-no-files-found: error

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision

  distribute-ios:
    needs: build-ios
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: App.ipa

      - name: Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.3.2
        with:
          appId: ${{secrets.IOS_FIREBASE_APP_ID_STAGING}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: testers
          file: deleteme.ipa